@using System.ComponentModel.DataAnnotations
@using BlazorCraft.Web.Shared._Exercises.Forms

@* Inject the IEmployeeService with which employee data can be managed *@ 

@* Create an EditForm that uses the _selectedEmployee as Model and if the model is valid, then the employee if saved in EmployeeService*@
@* For each field of the employee create the corresponding input with labels and Validation messages. Refer to DataAnnotationsValidatorExample.razor how to create each input type with their labels *@
@* Create a validation summary as well at the end of the form! *@

@* Note: The Id field will be auto-generated, therefore, you don't need to create an input for that *@

<ListComponent5 T="Employee">
    <Title>
        <div class="d-flex justify-content-start gap-2">
            <h2>Employees</h2>
            @* bind the click event of this button to a handler, that bind an empty employee to the form *@ 
            <button class="btn btn-primary" >
                Create
            </button>
        </div>
    </Title>
    <ListTemplate>
        <table class="table table-dark">
            <thead>
            @* Ad Id, First Name, Last Name, Position, Salary, and BirthDate header *@
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Position</th>
                <th>Salary</th>
                <th>Birthdate</th>
            </tr>
            </thead>
            <tbody>
            @context
            </tbody>
        </table>
    </ListTemplate>
    <ListItemTemplate>
        @* Add the row values according to the headers *@
       
    </ListItemTemplate>
</ListComponent5>

@code {

    private Employee? _selectedEmployee;

    public class Employee
    {
        public int Id { get; set; }

        [Required]
        public string? FirstName { get; set; }

        [Required]
        public string? LastName { get; set; }

        [Required]
        public string? Position { get; set; }
        
        [Range(20000, 40000)]
        [Required]
        public int? Salary { get; set; }
        
        [Required]
        public DateTime? BirthDate { get; set; }
        
    }

}