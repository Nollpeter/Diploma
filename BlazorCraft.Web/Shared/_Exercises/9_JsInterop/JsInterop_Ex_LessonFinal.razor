@using Employee = _5_RenderFragments.RenderFragments_LessonFinal.Employee

@* 
    We are going to reuse the list component of renderfragments again (RenderFragments_LessonFinal), 
    but this time, the employees will be set from the javascript runtime.
    Accompanying js file can be found at: /wwwroot/js/exercises/js-interop/js-interop-exercise-helper.js
    It also gives you hints, how methods should be named here
*@

@* Inject IJsRuntime, use the name: "JsRuntime" *@


@code {

    private List<Employee>? _employees;
    
    
    // Create a method, that will be invokable from the javascript runtime
    // The method should be able to accept a list of employees and also,
    // the method should make sure, that the employees can be bound to the list component
    // Hint: Remember how the properties were bound in the previous chapters' exercise

    public async Task CallJs()
    {
        // register the blazor component with the DotNetObjectReference for the Js runtime
        
        // This one could be tricky, so it is pre-provided for you!
        await InvokeAsync(async () =>
        {
            StateHasChanged();
            await Task.CompletedTask;
        });
    }

}