@typeparam TEnum where TEnum: struct, Enum
@inherits MudSelect<TEnum?>
@{
    base.BuildRenderTree(__builder);
}
@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ChildContent = EnumItems;
    }

    protected RenderFragment EnumItems => builder =>
    {
        int seq = 0;
        
        // Add a null option
        builder.OpenComponent<MudSelectItem<TEnum?>>(seq++);
        builder.AddAttribute(seq++, "Value", (TEnum?)null);
        builder.CloseComponent();

        // Add the enum values
        foreach (var enumValue in Enum.GetValues<TEnum>())
        {
            builder.OpenComponent<MudSelectItem<TEnum?>>(seq++);
            builder.AddAttribute(seq++, "Value", enumValue);
            builder.AddContent(seq++, enumValue.ToString());
            builder.CloseComponent();
        }
    };
}