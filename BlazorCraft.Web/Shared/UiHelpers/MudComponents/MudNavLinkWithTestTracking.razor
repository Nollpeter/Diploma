@using BlazorCraft.Web.Infrastructure
@inherits MudPageNavlink
@inject ITestRunnerService TestRunnerService

@{
    base.BuildRenderTree(__builder);
}

@code {

    private TestRunSession _pageSession => TestRunnerService.GetSessionForPage(PageType);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        TestRunnerService.TestStateChanged += (sender, args) =>
        {
            if (args.TestDescriptor.PageClass != PageType) return;

            
            switch (_pageSession.GetSessionStateInPage(PageType))
            {
                case TestRunState.NotStarted:
                    Icon = Icons.Material.Filled.QuestionMark;
                    break;
                case TestRunState.Running:
                    Icon = CustomIcons.SpinnerSmall;
                    IconColor = Color.Primary;
                    break;
                case TestRunState.Successful:
                    Icon = Icons.Material.Filled.Check;
                    IconColor = Color.Success;
                    break;
                case TestRunState.Error:
                    Icon = Icons.Material.Filled.Error;
                    IconColor = Color.Error;
                    break;
                case TestRunState.AtLeastOneNotStarted:
                    Icon = Icons.Material.Outlined.Warning;
                    IconColor = Color.Warning;
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
            StateHasChanged();
        };
    }

}