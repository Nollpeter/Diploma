@using System.Reflection
@using BlazorCraft.Web.Infrastructure
@inherits MudNavLink
@inject ITestRunnerService TestRunnerService

@{
    base.BuildRenderTree(__builder);
}


@code {

    [Parameter, EditorRequired]
    public Type PageType { get; set; } = null!;

    private string GetPageRoute(Type pageType)
    {
        var routeAttribute = pageType.GetCustomAttribute<RouteAttribute>();
        if (routeAttribute != null)
        {
            return routeAttribute.Template;
        }
        return null;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Href = GetPageRoute(PageType);
        TestRunnerService.TestStateChanged += (sender, args) =>
        {
            if (args.TestDescriptor.PageClass != PageType) return;
            Console.WriteLine(args.TestRunState);
            
            switch (args.TestRunState)
            {
                case TestRunState.NotStarted:
                    Icon = "";
                    break;
                case TestRunState.Running:
                    Icon = CustomIcons.SpinnerSmall;
                    IconColor = Color.Primary;
                    break;
                case TestRunState.Successful:
                    Icon = Icons.Filled.Check;
                    IconColor = Color.Success;
                    break;
                case TestRunState.Error:
                    Icon = Icons.Filled.Error;
                    IconColor = Color.Error;
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
            StateHasChanged();
        };
    }

}